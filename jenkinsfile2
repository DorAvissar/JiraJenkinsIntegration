pipeline {
    agent any

    environment {
        JIRA_URL = 'https://4323-2a0d-6fc2-119c-1d00-d9e1-36df-b648-d8d0.ngrok-free.app/' // Base URL for Jira
        JIRA_ISSUE_KEY = 'MET-1' // Key for the Jira issue to be updated
        JIRA_USER = 'jira' // Jira username
        JIRA_API_TOKEN = credentials('jira_cred') // Jenkins credential for Jira API token
    }

    stages {
        stage('Update Jira to Done') {
            steps {
                script {
                    // Jira REST API endpoint to transition an issue
                    def jiraTransitionEndpoint = "${JIRA_URL}rest/api/3/issue/${JIRA_ISSUE_KEY}/transitions"

                    // Data for transitioning the issue to "Done"
                    def transitionData = [
                        'transition': [
                            'id': '21' // Transition ID for "Done"; ensure this is correct
                        ]
                    ]

                    // Generate Base64-encoded authorization header without using getBytes()
                    def authString = "${JIRA_USER}:${JIRA_API_TOKEN}"
                    def encodedAuthString = authString.bytes.encodeBase64().toString()

                    // Send a POST request to Jira to update the issue's status
                    httpRequest(
                        httpMode: 'POST',
                        url: jiraTransitionEndpoint,
                        contentType: 'APPLICATION_JSON',
                        requestBody: groovy.json.JsonOutput.toJson(transitionData),
                        customHeaders: [
                            [name: 'Authorization', value: "Basic ${encodedAuthString}"]
                        ]
                    )
                }
            }
        }
    }
}
